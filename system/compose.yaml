services:
  traefik:
    image: traefik:latest
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=$CLOUDFLARE_DNS_API_TOKEN
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.defaultRule=Host(`{{ .Name | trimSuffix "-docker" | normalize }}.$DOMAIN_NAME`)
      - --providers.file.directory=/config
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.forgejo-ssh.address=:9022
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=$ACME_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/config/acme.json
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "9022:9022/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.volumes/traefik:/config
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      # Dashboard router
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=traefik-forward-auth@docker
      - traefik.http.routers.traefik.service=api@internal
      # Root router
      - traefik.http.routers.root.entrypoints=websecure
      - traefik.http.routers.root.rule=Host(`$DOMAIN_NAME`)
      - traefik.http.routers.root.middlewares=homepage-redirect@docker,mastodon-webfinger-redirect@docker,outline-redirect@docker
      - traefik.http.routers.root.service=noop@internal
      # Middlewares
      ## Headers
      - traefik.http.middlewares.cacheprivate.headers.customresponseheaders.Cache-Control=private
      - traefik.http.middlewares.perso.basicauth.users=$PERSO_BASIC_AUTH
      - traefik.http.middlewares.japan7.basicauth.users=$JAPAN7_BASIC_AUTH
      - traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181
      - traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User
      ## Homepage
      - traefik.http.middlewares.homepage-redirect.redirectregex.regex=^https://$DOMAIN_NAME/$
      - traefik.http.middlewares.homepage-redirect.redirectregex.replacement=$HOMEPAGE_REDIRECT_URL
      - traefik.http.middlewares.homepage-redirect.redirectregex.permanent=true
      ## Mastodon webfinger
      - traefik.http.middlewares.mastodon-webfinger-redirect.redirectregex.regex=^https://$DOMAIN_NAME/.well-known/webfinger
      - traefik.http.middlewares.mastodon-webfinger-redirect.redirectregex.replacement=https://mastodon.$DOMAIN_NAME/.well-known/webfinger
      - traefik.http.middlewares.mastodon-webfinger-redirect.redirectregex.permanent=true
      ## Outline catchall
      - traefik.http.middlewares.outline-redirect.redirectregex.regex=^https://$DOMAIN_NAME/(.*)
      - traefik.http.middlewares.outline-redirect.redirectregex.replacement=https://docs.$DOMAIN_NAME/s/$${1}

  traefik-forward-auth:
    image: ghcr.io/japan7/traefik-forward-auth:master
    environment:
      - SECRET=$TFA_SECRET
      - ENCRYPTION_KEY=$TFA_ENCRYPTION_KEY
      - PROVIDER_URI=https://keycloak.$DOMAIN_NAME/realms/$TFA_REALM
      - CLIENT_ID=$TFA_CLIENT_ID
      - CLIENT_SECRET=$TFA_CLIENT_SECRET
      - SCOPE=openid profile email
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    command:
      - --cleanup
      - --notifications=shoutrrr
      - --notification-url=$NOTIFICATION_URL
      - --no-startup-message
      - "--schedule=0 0 6 * * *"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  borg:
    image: b3vis/borgmatic:latest
    hostname: borg
    environment:
      - BORG_REPO_REMOTE=$BORG_REPO_REMOTE
    volumes:
      - ..:/mnt/source:ro # backup source
      - $BORG_REPO:/mnt/borg-repository # backup target
      - ./borg/etc:/etc/borgmatic.d/:ro # borgmatic config file(s) + crontab.txt
      - ./.volumes/borg/config:/root/.config/borg # config and keyfiles
      - ./.volumes/borg/cache:/root/.cache/borg # checksums used for deduplication
      - ./.volumes/rclone:/root/.config/rclone
    restart: unless-stopped
